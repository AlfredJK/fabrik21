<?php
/**
 * @package fabrikar
 * @author Rob Clayburn
 * @copyright (C) Rob Clayburn
 * @license http://www.gnu.org/copyleft/gpl.html GNU/GPL
 */

// Check to ensure this file is included in Joomla!
defined('_JEXEC') or die();

//require the abstract plugin class
require_once(COM_FABRIK_FRONTEND.DS.'models'.DS.'plugin.php');
require_once(COM_FABRIK_FRONTEND.DS.'models'.DS.'validation_rule.php');
require_once(COM_FABRIK_FRONTEND.DS.'plugins'.DS.'validationrule'.DS.'openprovider'.DS.'api.php');

class FabrikModelOpenprovider extends FabrikModelValidationRule {

	var $_pluginName = 'openprovider';

	/** @param string classname used for formatting error messages generated by plugin */
	var $_className = 'notempty openprovider';

	/**
	 * validate the elements data against the rule
	 * @param string data to check
	 * @param object element
	 * @param int plugin sequence ref
	 * @param int repeat group count
	 * @return bol true if validation passes, false if fails
	 */

	function validate($data, &$element, $c, $repeat_count = 0)
	{
		$params =& $this->getParams();
		$username = $params->get('openprovider_username', '_default','array', $c);
		$username = $username[$c];
		$password = $params->get('openprovider_password', '_default','array', $c);
		$password = $password[$c];
		$data = strtolower($data);
		//strip www. from front
		if (substr($data, 0, 4) == 'www.') {
			$data = substr($data, 4, strlen($data));
		}
		list($domain, $extension) = explode('.', $data);

		$api = new OP_API('https://api.openprovider.eu');

		$args = array(
    'domains' => array(
		array(
        'name' => $domain,
        'extension' => $extension
		)
		)
		);
		$request = new OP_Request;
		$request->setCommand('checkDomainRequest')
		->setAuth(array('username' => $username, 'password' => $password))
		->setArgs($args);

		$reply = $api->setDebug(0)->process($request);
		$res = $reply->getValue();
		return $res[0]['status'] === 'active' ? false : true;
	}

	/**
	 *  renders admin settings
	 */

	function renderAdminSettings($elementId, &$row, &$params, $c)
	{
		$params->_counter_override = $this->_counter;
		$display =  ($this->_adminVisible) ? "display:block" : "display:none";
		$return = '<div class="page-' . $elementId . ' validationSettings" style="' . $display . '">'
		. $params->render('params', '_default', false, $c);
		$return .= '</div>';
		$return = str_replace("\r", "", $return);
		return $return;
	}

}
?>