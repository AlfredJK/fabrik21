# 
# Joomla! Project
# Copyright (C) 2005 - 2007 Open Source Matters. All rights reserved.
# License http://www.gnu.org/licenses/gpl-2.0.html GNU/GPL, see LICENSE.php
# Note : All ini files need to be saved as UTF-8 - No BOM

EMAILTO=Email to
EMAILTODESC=Comma seperated list of email addresses. Dynamically include form data by entering {tablename___elementname}
EMAILFROM=From
EMAILFROMDESC=Comma seperated list of email addresses. Dynamically include form data by entering {tablename___elementname}. Use 'friendly names' by separating email and name with a colon (:). E.g. 'my@email.com:John Doe'
EMAILSUBJECT=Email Subject Line
EMAILSUBJECTDESC=Dynamically include form element data by using {tablename___elementname}
EMAILTEMPLATE=PHP/HTML Template
EMAILTEMPLATEDESC=Email templates can be created in components/com_fabrik/plugins/form/fabrikemail/tmpl either as php or html files. If none selected a default plain text template will be used. HTML files can dynamically include form element data by using {tablename___elementname}
ORCONTENTITEMTEMPLATE	=Article template
ORCONTENTITEMTEMPLATEDESC=Select a Joomla article to use as your template, in addition or instead of the PHP/HTML template. Placeholders e.g. {tablename___elementname} will be replaced with the forms data. If select instead of a PHP/HTML template then the content of the article will be emailed. If selected as well as a PHP/HTML template then the content of this article will be available in the template by using the placeholder {content}.
EMAILTOEVAL=Email to (eval)
EMAILTOEVALDESC=OPTIONAL - PHP code to generate a comma separated list of recipient addresses.  Will be appended to anything specified in 'Email to'.
EMAILATTACHTYPE=Attachment type
EMAILATTACHTYPEDESC=OPTIONAL - if a file extension (like csv) is provided, the message content (output of your template) will also be attached with a random filename (using the specified extension).  If not specified, not attachment is sent.
EMAILATTACHEVAL=Attachments (eval)
EMAILATTACHEVALDESC=OPTIONAL - PHP code to add attachments.  Code just needs to return an array of full path name(s) to desired file(s).  Can use placeholders, and/or access form data in $this->data.